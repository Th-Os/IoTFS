name: CoreFS

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - dev
      - test_actions
env:
  PACKAGE_NAME: core_fs_th_os
  PACKAGE_VERSION: 0.0.1
  PYTHON_VERSION: 3.7.4
  PYTHON_PATH: corefs
  FUSE_VERSION: 3.7.0
jobs:
  lint: # install, lint, test, build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7.4 # env variable not working here
        uses: actions/setup-python@master
        with:
          python-version: 3.7.4
      - name: Upgrading pip
        run: python3 -m pip install --upgrade pip
      - name: Checkout CoreFS
        uses: actions/checkout@master
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 ./src --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
  install_test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CoreFS
        uses: actions/checkout@master
      - name: Set up Python 3.7.4
        uses: actions/setup-python@master
        with:
          python-version: 3.7.4
      - name: Upgrading pip
        run: python3 -m pip install --upgrade pip
      - name: Installing FUSE
        run: |
          sudo chmod 777 install_fuse.sh
          ./install_fuse.sh $FUSE_VERSION
      - name: Install dependencies
        run: pip3 install -r requirements.txt
      - name: Start Application
        run: |
          nohup python3 -u ./corefs/core.py dir --debug &
          echo $! > app.pid
      - name: Application Status Before Test
        run: |
          cat logs/*.log
      - name: Run Basic Tests with pytest
        run: |
          pip3 install pytest
          pytest --ignore tests/advanced
      - name: Read Logs
        run: |
          cat logs/*.log
      - name: Stop Application
        run: |
          kill `cat app.pid` # kill resulting PID
          sudo umount dir
  build:
    needs: install_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CoreFS
        uses: actions/checkout@master
      - name: Set up Python 3.7.4
        uses: actions/setup-python@master
        with:
          python-version: 3.7.4
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --upgrade setuptools wheel
      - name: Build Package
        run: |
          python3 setup.py sdist bdist_wheel
      - name: Upload Archive
        uses: actions/upload-artifact@master
        with:
          name: package
          path: dist/$PACKAGE_NAME-$PACKAGE_VERSION-py3-none-any.whl
  test_app:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7.4
        uses: actions/setup-python@master
        with:
          python-version: 3.7.4
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --upgrade setuptools wheel
      - name: Download Archive
        uses: actions/download-artifact@master
        with:
          name: package
          path: package.whl
      - name: Lookup Archive
        run: ls
      - name: Install Package
        run: |
          python3 setup.py sdist bdist_wheel
          pip3 install --ignore-installed package.whl
      - name: Start Application
        run: |
          nohup python3 -u ./example_app/app.py dir --debug &
          echo $! > app.pid
      - name: Application Status Before Test
        run: |
          cat logs/*.log
      - name: Run Basic Tests with pytest
        run: |
          pip3 install pytest
          pytest --ignore tests/advanced
      - name: Read Logs
        run: |
          cat logs/*.log
      - name: Stop Application
        run: |
          kill `cat app.pid` # kill resulting PID
          sudo umount dir
  test_input: # TODO: Install fuse, mqtt, python, pip; Start application; Run advanced tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7.4
        uses: actions/setup-python@master
        with:
          python-version: 3.7.4
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --upgrade setuptools wheel
      - name: Install MQTT Broker
        run: |
          sudo apt-get install mosquitto
          echo `service mosquitto status`
      - name: Download Archive
        uses: actions/download-artifact@master
        with:
          name: package
          path: package.whl
      - name: Lookup Archive
        run: ls
      - name: Install Package
        run: |
          python3 setup.py sdist bdist_wheel
          pip3 install --ignore-installed package.whl
      - name: Start Application
        run: |
          nohup python3 -u ./example_app/app.py dir --debug &
          echo $! > app.pid
      - name: Application Status Before Test
        run: |
          cat logs/*.log
      - name: Run Basic Tests with pytest
        run: |
          pip3 install pytest
          pytest tests/advanced/input
      - name: Read Logs
        run: |
          cat logs/*.log
      - name: Stop Application
        run: |
          kill `cat app.pid` # kill resulting PID
          sudo umount dir
  test_output:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7.4
        uses: actions/setup-python@master
        with:
          python-version: 3.7.4
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --upgrade setuptools wheel
      - name: Download Archive
        uses: actions/download-artifact@master
        with:
          name: package
          path: package.whl
      - name: Lookup Archive
        run: ls
      - name: Install Package
        run: |
          python3 setup.py sdist bdist_wheel
          pip3 install --ignore-installed package.whl
      - name: Start Application
        run: |
          nohup python3 -u ./example_app/app.py dir --debug &
          echo $! > app.pid
      - name: Application Status Before Test
        run: |
          cat logs/*.log
      - name: Run Basic Tests with pytest
        run: |
          pip3 install pytest
          pytest tests/advanced/output
      - name: Read Logs
        run: |
          cat logs/*.log
      - name: Stop Application
        run: |
          kill `cat app.pid` # kill resulting PID
          sudo umount dir
