name: CoreFS

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - dev
      - test_actions
env:
  PACKAGE_NAME: core_fs_th_os
  PACKAGE_VERSION: 0.0.1
  PYTHON_VERSION: 3.7
  FUSE_VERSION: 3.7.0
jobs:
  lint: # install, lint, test, build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python $PYTHON_VERSION
        uses: actions/setup-python@master
        with:
          python-version: $PYTHON_VERSION
      - name: Upgrading pip
        run: python -m pip install --upgrade pip
      - name: Checkout CoreFS
        uses: actions/checkout@master
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 ./src --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
      - name: Start Application
        run: |
          nohup python3 -u ./src/main.py dir --debug-fuse --debug &
          echo $! > app.pid
      - name: Application Status Before Test
        run: |
          cat logs/*.log
      - name: Test with pytest
        run: |
          pip install pytest
          # pytest Needs revising
      - name: Read Logs
        run: |
          cat logs/*.log
      - name: Stop Application
        run: |
          kill `cat app.pid` # kill resulting PID
          sudo umount dir
  install_test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python $PYTHON_VERSION
        uses: actions/setup-python@master
        with:
          python-version: $PYTHON_VERSION
      - name: Upgrading pip
        run: python -m pip install --upgrade pip
      - name: Installing fuse $FUSE_VERSION
        uses: ./.github/actions/install-fuse
        with:
          version: $FUSE_VERSION
      - name: Install MQTT Broker
        run: |
          sudo apt-get install mosquitto
          echo `service mosquitto status`
      - name: Checkout CoreFS
        uses: actions/checkout@master
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Start Application
        run: |
          nohup python3 -u ./src/main.py dir --debug-fuse --debug &
          echo $! > app.pid
      - name: Application Status Before Test
        run: |
          cat logs/*.log
      - name: Run Basic Tests with pytest
        run: |
          pip install pytest
          pytest --ignore tests/advanced
      - name: Read Logs
        run: |
          cat logs/*.log
      - name: Stop Application
        run: |
          kill `cat app.pid` # kill resulting PID
          sudo umount dir
  build:
    needs: install_test
    runs-on: ubuntu-latest
    steps:
      - name: Build Package
        run: |
          python3 setup.py sdist bdist_wheel
      - name: Upload Archive
        uses: actions/upload-artifact@master
        with:
          name: package
          path: dist/$PACKAGE_NAME-$PACKAGE_VERSION-py3-none-any.whl
  test_input: # TODO: Install fuse, mqtt, python, pip; Start application; Run advanced tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Archive
        uses: actions/download-artifact@master
        with:
          name: package
          path: package.whl
      - name: Lookup Archive
        run: ls
  test_output:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Archive
      uses: actions/download-artifact@master
      with:
        name: package
        path: package.whl
    - name: Lookup Archive
      run: ls
